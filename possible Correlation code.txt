
def correlation(x1, x2):
  x10 = np.mean(x1)
  x20 = np.mean(x2)

  x1_dif = x1 - x10
  x2_dif = x2 - x20

  x1_dif_sq = x1_dif ** 2
  x2_dif_sq = x2_dif ** 2

  top = np.sum(x1_dif * x2_dif)
  bottom = np.sqrt(np.sum(x1_dif_sq) * np.sum(x2_dif_sq))

  try:
    coef = top / bottom
    return coef 
  except Exception as e:
    raise e

correlation_matrix = []

for column1 in X.columns:
  correlation_row = []
  for column2 in X.columns:
    x1 = np.array(X[column1].values)
    x2 = np.array(X[column2].values)
    coeff = correlation(x1, x2)
    correlation_row.append(coeff)
  
  correlation_matrix.append(correlation_row)

correlation_matrix = np.array(correlation_matrix)

_ = plt.figure(figsize=(8, 8))
plt.imshow(correlation_matrix)
plt.title("Correlation matrix")
plt.show()
     